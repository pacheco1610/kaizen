{"ast":null,"code":"var _jsxFileName = \"/Users/chavarias/Desktop/informatica/kaizen/src/components/layout/menu/menu.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass menu extends Component {\n  componentDidMount() {\n    let elements = document.getElementsByClassName('col-12');\n\n    if (elements[0] >= 0) {\n      elements[0].classList.add('activo');\n    }\n  }\n\n  handleMenu(key) {\n    this.props.UpdateMenu(key);\n    let elements = document.getElementsByClassName('col-12');\n\n    for (let index = 0; index < elements.length; index++) {\n      elements[index].classList.remove('activo');\n    }\n\n    document.getElementById(key).classList.toggle('activo');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, this.props.menu.map(button => /*#__PURE__*/React.createElement(\"button\", {\n      className: \"text-left list-group-item col-12 button-sidebar\",\n      id: button.key,\n      key: button.key,\n      onClick: () => this.handleMenu(button.key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: `mr-1 ${button.icono}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 165\n      }\n    }), \" \", button.titulo)));\n  }\n\n}\n\nconst mapStateProps = state => ({\n  menu: state.menu,\n  menuview: state.menuview\n});\n\nconst mapDispatchToprops = dispatch => ({\n  UpdateMenu(render) {\n    dispatch({\n      type: 'CAMBIAR_MENU',\n      render\n    });\n  }\n\n});\n\nexport default connect(mapStateProps, mapDispatchToprops)(menu);","map":{"version":3,"sources":["/Users/chavarias/Desktop/informatica/kaizen/src/components/layout/menu/menu.jsx"],"names":["React","Component","connect","menu","componentDidMount","elements","document","getElementsByClassName","classList","add","handleMenu","key","props","UpdateMenu","index","length","remove","getElementById","toggle","render","map","button","icono","titulo","mapStateProps","state","menuview","mapDispatchToprops","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,iBAAiB,GAAE;AACf,QAAIC,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,CAAf;;AACA,QAAIF,QAAQ,CAAC,CAAD,CAAR,IAAa,CAAjB,EAAoB;AAChBA,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYG,SAAZ,CAAsBC,GAAtB,CAA0B,QAA1B;AACH;AAEJ;;AACDC,EAAAA,UAAU,CAACC,GAAD,EAAK;AACX,SAAKC,KAAL,CAAWC,UAAX,CAAsBF,GAAtB;AACA,QAAIN,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,QAAhC,CAAf;;AACA,SAAK,IAAIO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGT,QAAQ,CAACU,MAArC,EAA6CD,KAAK,EAAlD,EAAsD;AAClDT,MAAAA,QAAQ,CAACS,KAAD,CAAR,CAAgBN,SAAhB,CAA0BQ,MAA1B,CAAiC,QAAjC;AAEH;;AACDV,IAAAA,QAAQ,CAACW,cAAT,CAAwBN,GAAxB,EAA6BH,SAA7B,CAAuCU,MAAvC,CAA8C,QAA9C;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,KAAL,CAAWT,IAAX,CAAgBiB,GAAhB,CAAoBC,MAAM,iBACvB;AAAQ,MAAA,SAAS,EAAC,iDAAlB;AAAoE,MAAA,EAAE,EAAEA,MAAM,CAACV,GAA/E;AAAoF,MAAA,GAAG,EAAEU,MAAM,CAACV,GAAhG;AAAqG,MAAA,OAAO,EAAE,MAAI,KAAKD,UAAL,CAAgBW,MAAM,CAACV,GAAvB,CAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgJ;AAAG,MAAA,SAAS,EAAG,QAAOU,MAAM,CAACC,KAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhJ,OAA4LD,MAAM,CAACE,MAAnM,CADH,CADL,CADJ;AAOH;;AAzBwB;;AA2B7B,MAAMC,aAAa,GAAGC,KAAK,KAAI;AAC3BtB,EAAAA,IAAI,EAACsB,KAAK,CAACtB,IADgB;AAE3BuB,EAAAA,QAAQ,EAAED,KAAK,CAACC;AAFW,CAAJ,CAA3B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAI;AACnCf,EAAAA,UAAU,CAACM,MAAD,EAAQ;AAChBS,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAC,cADE;AAEPV,MAAAA;AAFO,KAAD,CAAR;AAID;;AANkC,CAAJ,CAAnC;;AAQA,eAAejB,OAAO,CAACsB,aAAD,EAAeG,kBAAf,CAAP,CAA0CxB,IAA1C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nclass menu extends Component {\n    componentDidMount(){\n        let elements = document.getElementsByClassName('col-12')\n        if (elements[0]>=0) {\n            elements[0].classList.add('activo')\n        }\n        \n    }\n    handleMenu(key){\n        this.props.UpdateMenu(key)\n        let elements = document.getElementsByClassName('col-12')\n        for (let index = 0; index < elements.length; index++) {\n            elements[index].classList.remove('activo')\n            \n        }\n        document.getElementById(key).classList.toggle('activo')\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.menu.map(button=>\n                    <button className=\"text-left list-group-item col-12 button-sidebar\" id={button.key} key={button.key} onClick={()=>this.handleMenu(button.key)} ><i className={`mr-1 ${button.icono}`}></i> {button.titulo}</button>\n                    )} \n            </React.Fragment>\n        )\n    }\n}\nconst mapStateProps = state =>({\n    menu:state.menu,\n    menuview: state.menuview\n})\nconst mapDispatchToprops = dispatch =>({\n    UpdateMenu(render){\n      dispatch({\n        type:'CAMBIAR_MENU',\n        render\n      })\n    },\n})\nexport default connect(mapStateProps,mapDispatchToprops)(menu);\n"]},"metadata":{},"sourceType":"module"}