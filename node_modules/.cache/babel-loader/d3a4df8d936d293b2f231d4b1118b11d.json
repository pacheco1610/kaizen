{"ast":null,"code":"var _jsxFileName = \"/Users/chavarias/Desktop/informatica/kaizen/src/context/AuthContext.js\";\nimport React, { Component } from 'react';\nimport firebase from '../firebaseConfig';\nimport '../estilos/layout.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from 'react-redux';\n\nclass AuthContext extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      firebase.auth().onAuthStateChanged(user => {\n        this.setState({\n          isSignedIn: !!user\n        });\n        this.props.UpdateUsuario(user);\n        let userId = firebase.auth().currentUser.uid;\n        firebase.database().ref('usuarios/' + userId).once(\"value\").then(snapshot => {\n          if (!snapshot.exists()) {\n            this.props.UpdateInfo({\n              displayName: user.displayName,\n              photoURL: user.photoURL,\n              registrado: false\n            });\n          } else {\n            this.props.UpdateInfo(snapshot.val());\n            /*-------------------------------CLIENTES--------------------------------------- */\n\n            firebase.database().ref('clientes').orderByChild('idempresa').equalTo(snapshot.val().empresa).on('child_added', snap => {\n              let clientes = {\n                key: snap.key,\n                info: snap.val()\n              };\n              this.props.Clientes(clientes);\n            });\n            firebase.database().ref('clientes').orderByChild('idempresa').equalTo(snapshot.val().empresa).on('child_changed', snap => {\n              let clientes = this.props.clientes.filter(item => item.key != snap.key);\n              clientes.push({\n                key: snap.key,\n                info: snap.val()\n              });\n              this.props.UpdateClientes(clientes);\n            });\n            firebase.database().ref('clientes').orderByChild('idempresa').equalTo(snapshot.val().empresa).on('child_removed', snap => {\n              let clientes = this.props.clientes.filter(item => item.key != snap.key);\n              this.props.UpdateClientes(clientes);\n            });\n            /*-------------------------------COLABORADORES--------------------------------------- */\n\n            firebase.database().ref('usuarios').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_added', snap => {\n              this.props.colaboradores(snap.val());\n            });\n            firebase.database().ref('usuarios').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_removed', snap => {\n              let colaboradores = this.props.colaboradoresInfo.filter(item => item.referencia != snap.val().referencia);\n              this.props.UpdateColaboradores(colaboradores);\n            });\n            /*-------------------------------PUESTOS------------------------------------ */\n\n            firebase.database().ref('puestos').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_added', snap => {\n              this.props.puestos(snap.val());\n            });\n            /*-------------------------------PUESTOS------------------------------------ */\n\n            firebase.database().ref('habilidades').on('child_added', snap => {\n              this.props.habilidades(snap.val());\n            });\n            firebase.database().ref('permisos').on('child_added', snap => {\n              this.props.permisos(snap.val());\n            });\n            /*-------------------------------Tareas------------------------------------ */\n\n            /*--------------------------Tarea Pendiente---------------------*/\n\n            firebase.database().ref('tareas').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_added', snap => {\n              snap.val().responsables.map(responsable => {\n                if (responsable.referencia === snapshot.val().referencia && responsable.estatustarea === 'pendiente') {\n                  this.props.Tareas({\n                    key: snap.key,\n                    asignador: snap.val().asignador,\n                    descripcion: snap.val().descripcion,\n                    empresa: snap.val().empresa,\n                    estatustarea: snap.val().estatustarea,\n                    estatus: snap.val().estatus,\n                    fecha: snap.val().fecha,\n                    fechaCreada: snap.val().fechaCreada,\n                    responsables: snap.val().responsables,\n                    titulo: snap.val().titulo\n                  });\n                }\n              });\n            });\n            firebase.database().ref('tareas').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_changed', snap => {\n              let comprobar = 0;\n              snap.val().responsables.map(responsable => {\n                if (responsable.referencia === snapshot.val().referencia && responsable.estatustarea === 'realizada') {\n                  comprobar = comprobar + 1;\n                }\n              });\n\n              if (comprobar == 1) {\n                let tareasFilter = this.props.TareasUpdate.filter(item => item.key !== snap.key);\n                this.props.UpdateTareas(tareasFilter);\n              } else {\n                if (snap.val().asignador.referencia !== snapshot.val().referencia) {\n                  let tareasFilter = this.props.TareasUpdate.filter(item => item.key !== snap.key);\n                  tareasFilter.push({\n                    key: snap.key,\n                    asignador: snap.val().asignador,\n                    descripcion: snap.val().descripcion,\n                    empresa: snap.val().empresa,\n                    estatustarea: snap.val().estatustarea,\n                    estatus: snap.val().estatus,\n                    fecha: snap.val().fecha,\n                    fechaCreada: snap.val().fechaCreada,\n                    responsables: snap.val().responsables,\n                    titulo: snap.val().titulo\n                  });\n                  this.props.UpdateTareas(tareasFilter);\n                }\n              }\n            });\n            /*--------------------------Tareas Asignadas---------------------*/\n\n            firebase.database().ref('tareas').orderByChild('asignador/referencia').equalTo(snapshot.val().referencia).on('child_added', snap => {\n              let comprobar = 0;\n              snap.val().responsables.map(responsable => {\n                if (responsable.referencia === snapshot.val().referencia) {\n                  comprobar = comprobar + 1;\n                }\n              });\n\n              if (comprobar === 0 && snap.val().asignador.referencia === snapshot.val().referencia) {\n                this.props.TareasAsignadas({\n                  key: snap.key,\n                  asignador: snap.val().asignador,\n                  descripcion: snap.val().descripcion,\n                  empresa: snap.val().empresa,\n                  estatustarea: snap.val().estatustarea,\n                  estatus: snap.val().estatus,\n                  fecha: snap.val().fecha,\n                  fechaCreada: snap.val().fechaCreada,\n                  responsables: snap.val().responsables,\n                  titulo: snap.val().titulo\n                });\n              }\n            });\n            firebase.database().ref('tareas').orderByChild('asignador/referencia').equalTo(snapshot.val().empresa).on('child_changed', snap => {\n              let comprobar = 0;\n              snap.val().responsables.map(responsable => {\n                if (responsable.referencia === snapshot.val().referencia) {\n                  comprobar = comprobar + 1;\n                }\n              });\n\n              if (comprobar === 0 && snap.val().asignador.referencia === snapshot.val().referencia) {\n                this.props.TareasAsignadas({\n                  key: snap.key,\n                  asignador: snap.val().asignador,\n                  descripcion: snap.val().descripcion,\n                  empresa: snap.val().empresa,\n                  estatustarea: snap.val().estatustarea,\n                  estatus: snap.val().estatus,\n                  fecha: snap.val().fecha,\n                  fechaCreada: snap.val().fechaCreada,\n                  responsables: snap.val().responsables,\n                  titulo: snap.val().titulo\n                });\n              }\n            });\n            /*-------------------------------MENU--------------------------------------- */\n\n            firebase.database().ref('usuarios/' + userId + '/permisos').on('child_added', snap => {\n              const {\n                menu\n              } = this.state;\n              menu.push({\n                icono: snap.val().icono,\n                titulo: snap.val().titulo,\n                key: snap.val().key\n              });\n              this.props.UpdateMenu(menu);\n            });\n          }\n        });\n      });\n    };\n\n    this.state = {\n      isLogin: false,\n      menu: [],\n      clientes: this.props.clientes,\n      tareas: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst mapStateProps = state => ({\n  usuario: state.usuario,\n  clientes: state.clientes,\n  colaboradoresInfo: state.colaboradores,\n  TareasUpdate: state.Tareas,\n  tareasAsignadas: state.tareasAsignadas\n});\n\nconst mapDispatchToprops = dispatch => ({\n  UpdateUsuario(usuario) {\n    dispatch({\n      type: 'usuario',\n      usuario\n    });\n  },\n\n  UpdateInfo(info) {\n    dispatch({\n      type: 'info',\n      info\n    });\n  },\n\n  Clientes(clientes) {\n    dispatch({\n      type: 'clientes',\n      clientes\n    });\n  },\n\n  UpdateClientes(clientes) {\n    dispatch({\n      type: 'updateClientes',\n      clientes\n    });\n  },\n\n  UpdateColaboradores(colaborador) {\n    dispatch({\n      type: 'UpdateColaboradores',\n      colaborador\n    });\n  },\n\n  UpdateMenu(menu) {\n    dispatch({\n      type: 'MENU',\n      menu\n    });\n  },\n\n  colaboradores(colaborador) {\n    dispatch({\n      type: 'COLABORADORES',\n      colaborador\n    });\n  },\n\n  permisos(permisos) {\n    dispatch({\n      type: 'permisos',\n      permisos\n    });\n  },\n\n  puestos(puestos) {\n    dispatch({\n      type: 'puestos',\n      puestos\n    });\n  },\n\n  habilidades(habilidades) {\n    dispatch({\n      type: 'habilidades',\n      habilidades\n    });\n  },\n\n  Tareas(tarea) {\n    dispatch({\n      type: 'Tareas',\n      tarea\n    });\n  },\n\n  TareasAsignadas(tareaasignada) {\n    dispatch({\n      type: 'TareasAsignadas',\n      tareaasignada\n    });\n  },\n\n  UpdateTareas(UpdateTareas) {\n    dispatch({\n      type: 'UpdateTareas',\n      UpdateTareas\n    });\n  }\n\n});\n\nexport default connect(mapStateProps, mapDispatchToprops)(AuthContext);","map":{"version":3,"sources":["/Users/chavarias/Desktop/informatica/kaizen/src/context/AuthContext.js"],"names":["React","Component","firebase","connect","AuthContext","constructor","props","componentDidMount","auth","onAuthStateChanged","user","setState","isSignedIn","UpdateUsuario","userId","currentUser","uid","database","ref","once","then","snapshot","exists","UpdateInfo","displayName","photoURL","registrado","val","orderByChild","equalTo","empresa","on","snap","clientes","key","info","Clientes","filter","item","push","UpdateClientes","colaboradores","colaboradoresInfo","referencia","UpdateColaboradores","puestos","habilidades","permisos","responsables","map","responsable","estatustarea","Tareas","asignador","descripcion","estatus","fecha","fechaCreada","titulo","comprobar","tareasFilter","TareasUpdate","UpdateTareas","TareasAsignadas","menu","state","icono","UpdateMenu","isLogin","tareas","render","children","mapStateProps","usuario","tareasAsignadas","mapDispatchToprops","dispatch","type","colaborador","tarea","tareaasignada"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from '../firebaseConfig'\nimport '../estilos/layout.css'\nimport 'react-toastify/dist/ReactToastify.css';\nimport {connect} from 'react-redux'\n\nclass AuthContext extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            isLogin:false,\n            menu:[],\n            clientes:this.props.clientes,\n            tareas:[],\n        }\n    }\n    componentDidMount=()=>{\n        firebase.auth().onAuthStateChanged(user=>{\n            this.setState({ isSignedIn: !!user })\n            this.props.UpdateUsuario(user)\n\n            let userId = firebase.auth().currentUser.uid;\n            firebase.database().ref('usuarios/'+userId).once(\"value\")\n            .then((snapshot)=> {\n                if (!snapshot.exists()) {\n                    this.props.UpdateInfo({\n                        displayName:user.displayName,\n                        photoURL:user.photoURL,\n                        registrado:false\n                    })\n                }\n                else{\n                    this.props.UpdateInfo(snapshot.val())\n                    /*-------------------------------CLIENTES--------------------------------------- */\n                    firebase.database().ref('clientes').orderByChild('idempresa').equalTo(snapshot.val().empresa).on('child_added',snap=>{\n                        let clientes={\n                            key:snap.key,\n                            info:snap.val()\n                        }\n                        this.props.Clientes(clientes)\n                    })\n                    firebase.database().ref('clientes').orderByChild('idempresa').equalTo(snapshot.val().empresa).on('child_changed',snap=>{\n                        let clientes=this.props.clientes.filter(item => item.key!=snap.key)\n                        clientes.push({\n                            key:snap.key,\n                            info:snap.val()\n                        })\n                        this.props.UpdateClientes(clientes)\n                    })\n\n                    firebase.database().ref('clientes').orderByChild('idempresa').equalTo(snapshot.val().empresa).on('child_removed',snap=>{\n                        let clientes=this.props.clientes.filter(item => item.key!=snap.key)\n                        this.props.UpdateClientes(clientes)\n                    })\n                    /*-------------------------------COLABORADORES--------------------------------------- */\n                    firebase.database().ref('usuarios').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_added',snap=>{\n                        this.props.colaboradores(snap.val())\n                    })\n                    firebase.database().ref('usuarios').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_removed',snap=>{\n                        let colaboradores=this.props.colaboradoresInfo.filter(item=> item.referencia!=snap.val().referencia)\n                        this.props.UpdateColaboradores(colaboradores)\n                    })\n                    /*-------------------------------PUESTOS------------------------------------ */\n                    firebase.database().ref('puestos').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_added',snap=>{\n                        this.props.puestos(snap.val())\n                    })\n                     /*-------------------------------PUESTOS------------------------------------ */\n                    firebase.database().ref('habilidades').on('child_added',snap=>{\n                        this.props.habilidades(snap.val())\n                    })\n                     firebase.database().ref('permisos').on('child_added',snap=>{\n                        this.props.permisos(snap.val())\n                    })\n                       /*-------------------------------Tareas------------------------------------ */\n                            /*--------------------------Tarea Pendiente---------------------*/\n                            firebase.database().ref('tareas').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_added',snap=>{\n                                    snap.val().responsables.map(responsable =>\n                                        {if(responsable.referencia===snapshot.val().referencia&&responsable.estatustarea==='pendiente'){\n                                        this.props.Tareas({\n                                            key:snap.key,\n                                            asignador:snap.val().asignador,\n                                            descripcion:snap.val().descripcion,\n                                            empresa:snap.val().empresa,\n                                            estatustarea:snap.val().estatustarea,\n                                            estatus:snap.val().estatus,\n                                            fecha:snap.val().fecha,\n                                            fechaCreada:snap.val().fechaCreada,\n                                            responsables:snap.val().responsables,\n                                            titulo:snap.val().titulo\n                                        })\n                                        }}\n                                    )\n\n                            })\n                            firebase.database().ref('tareas').orderByChild('empresa').equalTo(snapshot.val().empresa).on('child_changed',snap=>{\n                                let comprobar=0\n                                snap.val().responsables.map(responsable =>\n                                    {\n                                    if(responsable.referencia===snapshot.val().referencia&&responsable.estatustarea==='realizada'){\n                                        comprobar=comprobar+1  \n                                    }\n                                })\n\n\n                                if (comprobar==1) {\n                                    let tareasFilter=this.props.TareasUpdate.filter(item => item.key!==snap.key)\n                                    this.props.UpdateTareas(tareasFilter)\n                                }else{\n                                    if (snap.val().asignador.referencia!==snapshot.val().referencia) {\n                                    let tareasFilter=this.props.TareasUpdate.filter(item=>item.key!==snap.key)\n                                    tareasFilter.push({\n                                        key:snap.key,\n                                        asignador:snap.val().asignador,\n                                        descripcion:snap.val().descripcion,\n                                        empresa:snap.val().empresa,\n                                        estatustarea:snap.val().estatustarea,\n                                        estatus:snap.val().estatus,\n                                        fecha:snap.val().fecha,\n                                        fechaCreada:snap.val().fechaCreada,\n                                        responsables:snap.val().responsables,\n                                        titulo:snap.val().titulo\n                                    })\n                                    this.props.UpdateTareas(tareasFilter)    \n                                    }\n                                     \n                                }\n                       \n                        })\n                         /*--------------------------Tareas Asignadas---------------------*/\n                         firebase.database().ref('tareas').orderByChild('asignador/referencia').equalTo(snapshot.val().referencia).on('child_added',snap=>{\n                            let comprobar=0;\n                            snap.val().responsables.map(responsable =>\n                                {\n                                    if(responsable.referencia===snapshot.val().referencia) {\n                                        comprobar=comprobar+1;\n                                    }\n                                })\n                            if (comprobar===0&&snap.val().asignador.referencia===snapshot.val().referencia) {\n                                this.props.TareasAsignadas({\n                                    key:snap.key,\n                                    asignador:snap.val().asignador,\n                                    descripcion:snap.val().descripcion,\n                                    empresa:snap.val().empresa,\n                                    estatustarea:snap.val().estatustarea,\n                                    estatus:snap.val().estatus,\n                                    fecha:snap.val().fecha,\n                                    fechaCreada:snap.val().fechaCreada,\n                                    responsables:snap.val().responsables,\n                                    titulo:snap.val().titulo\n                                })\n                            }\n                        })\n                        firebase.database().ref('tareas').orderByChild('asignador/referencia').equalTo(snapshot.val().empresa).on('child_changed',snap=>{\n                            let comprobar=0;\n                            snap.val().responsables.map(responsable =>\n                                {\n                                    if(responsable.referencia===snapshot.val().referencia) {\n                                        comprobar=comprobar+1;\n                                    }\n                                })\n                            if (comprobar===0&&snap.val().asignador.referencia===snapshot.val().referencia) {\n                                this.props.TareasAsignadas({\n                                    key:snap.key,\n                                    asignador:snap.val().asignador,\n                                    descripcion:snap.val().descripcion,\n                                    empresa:snap.val().empresa,\n                                    estatustarea:snap.val().estatustarea,\n                                    estatus:snap.val().estatus,\n                                    fecha:snap.val().fecha,\n                                    fechaCreada:snap.val().fechaCreada,\n                                    responsables:snap.val().responsables,\n                                    titulo:snap.val().titulo\n                                })\n                            }\n                        })\n                    /*-------------------------------MENU--------------------------------------- */\n                    firebase.database().ref('usuarios/'+userId+'/permisos').on('child_added',snap=>{\n                        const {menu}=this.state\n                        menu.push({\n                            icono:snap.val().icono,\n                            titulo:snap.val().titulo,\n                            key:snap.val().key\n                        })\n                        this.props.UpdateMenu(menu)\n                    })\n                }\n            });\n        })\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.children}\n            </React.Fragment>\n        )\n    }\n}\nconst mapStateProps = state =>({\n    usuario: state.usuario,\n    clientes: state.clientes,\n    colaboradoresInfo:state.colaboradores,\n    TareasUpdate:state.Tareas,\n    tareasAsignadas:state.tareasAsignadas\n})\n\nconst mapDispatchToprops = dispatch =>({\n    UpdateUsuario(usuario){\n      dispatch({\n        type:'usuario',\n        usuario\n      })\n    },\n    UpdateInfo(info){\n        dispatch({\n          type:'info',\n          info\n        })\n      },\n    Clientes(clientes){\n        dispatch({\n          type:'clientes',\n          clientes\n        })\n      },\n    UpdateClientes(clientes){\n        dispatch({\n          type:'updateClientes',\n          clientes\n        })\n      },\n    UpdateColaboradores(colaborador){\n        dispatch({\n          type:'UpdateColaboradores',\n          colaborador\n        })\n      },\n    UpdateMenu(menu){\n        dispatch({\n          type:'MENU',\n          menu\n        })\n      },\n      colaboradores(colaborador){\n        dispatch({\n          type:'COLABORADORES',\n          colaborador\n        })\n      },\n      permisos(permisos){\n          dispatch({\n              type:'permisos',\n              permisos\n          })\n      },\n      puestos(puestos){\n        dispatch({\n            type:'puestos',\n            puestos\n        })\n    },\n    habilidades(habilidades){\n        dispatch({\n            type:'habilidades',\n            habilidades\n        })\n    },\n    Tareas(tarea){\n        dispatch({\n            type:'Tareas',\n            tarea\n        })\n    },\n    TareasAsignadas(tareaasignada){\n        dispatch({\n            type:'TareasAsignadas',\n            tareaasignada\n        })\n    },\n    UpdateTareas(UpdateTareas){\n        dispatch({\n            type:'UpdateTareas',\n            UpdateTareas\n        })\n    }\n})\n\nexport default connect(mapStateProps,mapDispatchToprops)(AuthContext);"]},"metadata":{},"sourceType":"module"}